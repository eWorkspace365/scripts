# Define registry settings to check and update
$registrySettings = @(
    @{
        Path = "HKLM:\SOFTWARE\Policies\Adobe\Adobe Acrobat\DC\FeatureLockDown"
        Name = "bDisableJavaScript"
        Value = 1
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa"
        Name = "DisableDomainCreds"
        Value = 1
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa"
        Name = "RunAsPPL"
        Value = 1
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa"
        Name = "RestrictAnonymous"
        Value = 1
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa"
        Name = "LmCompatibilityLevel"
        Value = 5
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters"
        Name = "RequireSecuritySignature"
        Value = 1
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters"
        Name = "DisableIPSourceRouting"
        Value = 2
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters"
        Name = "DisableIPSourceRouting"
        Value = 2
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services"
        Name = "fAllowToGetHelp"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer"
        Name = "NoAutoplayfornonVolume"
        Value = 1
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service"
        Name = "AllowBasic"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client"
        Name = "AllowBasic"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
        Name = "NC_ShowSharedAccessUI"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
        Name = "NC_AllowNetBridge_NLA"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
        Name = "NC_StdDomainUserSetLocation"
        Value = 1
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd"
        Name = "AdmPwdEnabled"
        Value = 1
    },
    @{
        Path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
        Name = "NoAutorun"
        Value = 1
    },
    @{
        Path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
        Name = "NoDriveTypeAutoRun"
        Value = 255
    },
    @{
        Path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
        Name = "LocalAccountTokenFilterPolicy"
        Value = 0
    },
    @{
        Path = "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager"
        Name = "SafeDLLSearchMode"
        Value = 1
    },
    @{
        Path = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
        Name = "ConsentPromptBehaviorUser"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
        Name = "NC_AllowNetBridge_NLA"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Network Connections"
        Name = "NC_StdDomainUserSetLocation"
        Value = 1
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown"
        Name = "bEnableFlash"
        Value = 0
    },
    @{
        Path = "HKLM:\SOFTWARE\Policies\Adobe\Acrobat Reader\DC\FeatureLockDown"
        Name = "bDisableJavaScript"
        Value = 1
    }


)

# Loop through each registry setting
foreach ($setting in $registrySettings) {
    $path = $setting["Path"]
    $name = $setting["Name"]
    $value = $setting["Value"]

    # Check if the registry value exists
    if (Test-Path $path) {
        $currentValue = (Get-ItemProperty -Path $path -Name $name -ErrorAction SilentlyContinue).$name

        # If the registry value doesn't exist or doesn't match the required value, update it
        if ($currentValue -eq $null -or $currentValue -ne $value) {
            Write-Host "Updating registry value: $path\$name to $value"
            New-ItemProperty -Path $path -Name $name -Value $value -PropertyType DWORD -Force | Out-Null
        } else {
            Write-Host "Registry value: $path\$name is already set to $value"
        }
    } else {
        Write-Host "Registry path not found: $path"
    }
}